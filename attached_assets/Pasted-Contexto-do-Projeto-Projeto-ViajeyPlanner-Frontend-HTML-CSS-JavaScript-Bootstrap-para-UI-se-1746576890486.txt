Contexto do Projeto:
Projeto: ViajeyPlanner
Frontend: HTML, CSS, JavaScript (Bootstrap para UI, se aplicável).
Local do Menu: Canto superior direito, substituindo ou integrando-se ao texto "Olá, [nome do usuário]".
Arquivos de Frontend Prováveis: public/desktop.html (ou a página principal onde o cabeçalho aparece), static/js/auth_frontend.js (ou script principal que gerencia a UI do usuário logado).
Instruções para o Replit Agent:
Parte 1: Implementar Menu Dropdown do Usuário
Estrutura HTML do Dropdown:
No arquivo HTML principal (ex: public/desktop.html, no cabeçalho), localize a área onde o nome do usuário logado é exibido (ex: "Olá, cassio45").
Transforme essa área em um componente dropdown (usando classes do Bootstrap se o projeto o utilizar, ou HTML/CSS customizado).
O texto visível do dropdown deve ser o nome do usuário logado (ex: "Olá, [NomeDoUsuario]").
Itens do Menu Dropdown (Sugestões Iniciais - o usuário pode especificar mais):
Meus Roteiros: Link para a página que lista os roteiros do usuário (ex: meus-roteiros.html ou funcionalidade na desktop.html).
Minha Conta: Link para uma futura página de perfil/configurações da conta (ex: minha-conta.html).
Logout: Item que, ao ser clicado, executa a função de logout.
Funcionalidade do Logout no Dropdown:
Certifique-se de que o item "Logout" no dropdown chame a função JavaScript logout() existente (que deve limpar o token do localStorage e redirecionar para a página de login).
Parte 2: Revisão e Otimização do Fluxo de Login/Logout
Verificar Exibição do Nome do Usuário:
Após o login, garanta que o nome do usuário (ou email) seja corretamente obtido (do token JWT decodificado ou de uma chamada à API para buscar dados do usuário) e exibido na área do dropdown.
Consistência do Estado de Login na UI:
Revise os scripts (ex: static/js/auth_frontend.js) para garantir que a interface reflita corretamente o estado de login:
Mostrar links/botões de "Login" e "Registrar-se" apenas se o usuário NÃO estiver logado.
Mostrar o menu dropdown do usuário (com nome e opção de Logout) apenas se o usuário ESTIVER logado.
Redirecionamentos Pós-Login/Logout:
Confirme que após o login bem-sucedido, o usuário é redirecionado para a página correta (ex: dashboard).
Confirme que após o logout, o usuário é redirecionado para a página de login ou página inicial pública.
Armazenamento e Uso do Token JWT:
Verifique se o token JWT é consistentemente salvo no localStorage (ou onde estiver sendo armazenado) após o login.
Verifique se o token é corretamente recuperado e incluído no cabeçalho Authorization: Bearer ${token} em TODAS as requisições para rotas de API protegidas (ex: criar roteiro, listar meus roteiros, etc.).
Assegure que a função isUserLoggedIn() (ou similar) verifica corretamente a presença e validade (básica, como apenas a presença) do token.