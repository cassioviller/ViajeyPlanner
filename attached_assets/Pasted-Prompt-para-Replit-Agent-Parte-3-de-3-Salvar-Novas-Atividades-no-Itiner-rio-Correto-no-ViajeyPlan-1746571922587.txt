Prompt para Replit Agent (Parte 3 de 3): Salvar Novas Atividades no Itinerário Correto no ViajeyPlanner
Objetivo Desta Parte: Modificar o script static/js/itinerary-kanban.js do ViajeyPlanner para garantir que, quando um usuário adicionar uma nova atividade através do formulário no Kanban, essa atividade seja enviada para a API backend e salva corretamente, associada ao itinerário que está atualmente em edição (identificado pelo roteiroId na URL e carregado no appState).
Contexto do Projeto (Relembrando):
Projeto: ViajeyPlanner
Backend: Node.js com Express. API para criar atividades precisa ser utilizada ou definida (ex: POST /api/itineraries/:itineraryId/activities ou POST /api/activities com itinerary_id no corpo).
Frontend: HTML, CSS, JavaScript, Bootstrap.
Arquivo a ser modificado: static/js/itinerary-kanban.js
Página HTML relacionada: public/itinerary-kanban.html
Pré-requisitos:
Parte 1 (Seleção de Itinerário para Edição) implementada: O usuário pode selecionar um itinerário, e a página itinerary-kanban.html é chamada com `?roteiroId=[ID_DO_ITINERARIO]</code>.
Parte 2 (Carregar e Exibir Itinerário Selecionado) implementada: appState.currentItinerary na página itinerary-kanban.html é populado com os dados completos do itinerário (incluindo appState.currentItinerary.id) buscados da API.
Requisitos Detalhados para Implementação (Parte 3):
Modificar a Função saveNewActivity() (ou a função equivalente que salva uma nova atividade no static/js/itinerary-kanban.js):
Quando o usuário preencher o formulário para adicionar uma nova atividade (no modal add-activity-modal ou similar) e clicar no botão "Salvar" (ex: save-activity-btn):
Obter ID do Itinerário em Edição: Recupere o id do itinerário que está atualmente carregado e em edição. Este ID deve estar disponível em appState.currentItinerary.id.
Validação Crítica: Antes de prosseguir, verifique se appState.currentItinerary e appState.currentItinerary.id existem e são válidos. Se não houver um ID de itinerário, exiba uma mensagem de erro clara para o usuário (ex: "Não é possível salvar a atividade. Nenhum roteiro está em edição.") e não tente fazer a chamada à API.
Coletar Dados da Nova Atividade: Obtenha todos os dados da nova atividade a partir dos campos do formulário (ex: nome da atividade, tipo, localização, dia selecionado, período, horário de início, horário de fim, notas, etc.).
Identificador do Dia: Certifique-se de que você tem um identificador para o dia ao qual a atividade pertence (ex: day_number ou um day_id se o backend o fornecer e o frontend o armazenar quando os dias são carregados).
Realizar Requisição POST para a API Backend:
Construa um objeto (payload) contendo os dados da nova atividade.
Incluir IDs de Associação: Crucialmente, este payload deve incluir o itinerary_id (que é appState.currentItinerary.id) e o identificador do dia (ex: day_number ou day_id).
Faça uma requisição POST assíncrona para o endpoint da API backend responsável por criar atividades.
Sugestão de Endpoint (verificar/adaptar no backend se necessário): Considere um endpoint como POST /api/itineraries/:itineraryId/activities (onde :itineraryId é substituído pelo ID do itinerário e o day_id ou day_number vai no corpo da requisição) ou um endpoint mais genérico como POST /api/activities onde o corpo da requisição inclui itinerary_id e day_id/day_number.
O itineraryController.js no backend já lida com a criação de dias quando um itinerário é criado. A lógica para adicionar uma atividade a um dia específico de um itinerário existente pode precisar ser implementada ou ajustada no backend se não existir de forma granular. O frontend deve enviar os dados necessários para essa associação.
Exemplo de payload para a API:
json
{
  "itinerary_id": "ID_DO_ROTEIRO_ATUAL",
  "day_number": 2, // ou "day_id": "ID_DO_DIA_SELECIONADO"
  "name": "Almoço Especial",
  "type": "meal",
  "location": "Restaurante Famoso",
  "start_time": "13:00",
  "notes": "Reserva confirmada."
  // ... outros campos da atividade
}
Processar a Resposta da API e Atualizar a UI:
Tratamento de Resposta:
Se a requisição POST for bem-sucedida (ex: status HTTP 201 Created), a API backend deve retornar os dados da atividade recém-criada, incluindo seu ID único gerado pelo banco de dados.
Se a requisição falhar, a API deve retornar um status de erro apropriado e, idealmente, uma mensagem de erro.
Feedback ao Usuário: Informe o usuário sobre o resultado da operação (ex: "Atividade adicionada com sucesso!" ou "Erro ao salvar atividade: [mensagem de erro da API]").
Atualizar a Interface do Usuário (Kanban):
Se a atividade foi salva com sucesso no backend:
Use os dados da atividade retornados pela API (especialmente o novo id da atividade) para criar um novo card de atividade no Kanban.
Utilize a função createActivityCard (ou uma versão adaptada dela) para gerar o HTML do card e adicioná-lo à coluna correta do Kanban (Manhã, Tarde, Noite, Não Agendado) e ao dia correspondente.
Limpe o formulário de adição de atividade e feche o modal.
Considerações Adicionais para o Replit Agent:
Consistência de Dados: Garanta que o appState.currentItinerary no frontend seja atualizado para refletir a adição da nova atividade, se necessário, para manter a consistência com o backend (embora a renderização direta com os dados da API seja o principal).
Endpoint da API: O prompt assume que um endpoint adequado para criar atividades associadas a um itinerário/dia existe ou será criado no backend. Se o Agent precisar definir esse endpoint no backend também, isso seria uma tarefa separada ou uma extensão deste prompt.
Validação de Formulário: Mantenha ou melhore a validação dos campos do formulário de nova atividade no frontend antes de enviar para a API.
Resultado Esperado Após Esta Parte:
Quando o usuário estiver visualizando um itinerário carregado (via roteiroId na URL) na página itinerary-kanban.html:
Ao preencher o formulário de "Nova Atividade" e clicar em "Salvar":
Uma requisição POST será enviada para a API backend com os dados da atividade, o itinerary_id do roteiro em edição e o identificador do dia.
A atividade será salva no banco de dados, associada corretamente.
O quadro Kanban na interface do usuário será atualizado para exibir o card da nova atividade no local correto.
O usuário receberá feedback sobre o sucesso ou falha da operação.
Por favor, Replit Agent, proceda com a análise e sugestão de modificações no arquivo static/js/itinerary-kanban.js para implementar esta funcionalidade de salvamento de atividades.