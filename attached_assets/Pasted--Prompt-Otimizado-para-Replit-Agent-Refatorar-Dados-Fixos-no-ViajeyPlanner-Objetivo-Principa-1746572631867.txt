## Prompt Otimizado para Replit Agent: Refatorar Dados Fixos no ViajeyPlanner

**Objetivo Principal:** Analisar todo o projeto ViajeyPlanner e refatorar o código para eliminar ou parametrizar dados fixos ("hardcoded"), tornando a aplicação mais flexível, configurável e fácil de manter.

**Instruções Gerais para o Replit Agent:**

1.  **Varredura Completa:** Examine todos os arquivos do projeto, incluindo JavaScript (frontend e backend), HTML, e quaisquer outros arquivos de código ou configuração.
    *   Principais diretórios/arquivos a focar (mas não se limite a eles):
        *   `static/js/` (ex: `app.js`, `itinerary-kanban.js`, `desktop.js`)
        *   `public/` (arquivos HTML)
        *   `models/`
        *   `controllers/`
        *   `routes/`
        *   `shared/` (ex: `db.js` para configurações de conexão)
        *   `server.js`

2.  **Identificar Dados Fixos:** Localize e liste instâncias de:
    *   **Strings Literais Suspeitas:** Textos de UI, mensagens de erro, URLs completas, caminhos de arquivo, chaves de API (se visíveis - ALERTA DE SEGURANÇA), ou qualquer string que pareça ser um valor de configuração ou dado que poderia mudar.
    *   **Números Mágicos:** Valores numéricos usados diretamente no código sem explicação clara do seu propósito (ex: limites, contagens padrão, IDs de exemplo).
    *   **Configurações Embutidas:** Parâmetros de conexão com banco de dados (verificar se já usam `process.env` adequadamente), URLs base de APIs, ou qualquer configuração que não deva estar diretamente no código.
    *   **Dados de Exemplo/Teste:** Objetos ou arrays com dados de exemplo que são usados como fallback ou para inicialização no código de produção (ex: a estrutura de itinerário de exemplo em `itinerary-kanban.js` ou `app.js`).

3.  **Sugerir e Aplicar Refatorações:** Para cada dado fixo identificado, proponha e, após aprovação, aplique a melhor estratégia de refatoração:
    *   **Variáveis de Ambiente (Preferencial para Configurações Sensíveis/Ambiente):** Para URLs de API, chaves de API (se necessário armazená-las, o ideal é que o backend as acesse via variáveis de ambiente e não sejam expostas no frontend), detalhes de conexão de banco de dados. Instrua sobre como o Replit Secrets (variáveis de ambiente) pode ser usado.
    *   **Arquivos de Configuração (ex: `config.js`):** Para configurações não sensíveis da aplicação (ex: URL base de uma API pública, itens por página, configurações padrão de UI).
    *   **Parâmetros de Função/Componente:** Se um valor é específico para uma instância ou uso de uma função/componente (ex: um ID de recurso, um texto de botão que varia).
    *   **Constantes Nomeadas:** Para números mágicos ou strings repetidas dentro de um mesmo arquivo, substitua por constantes com nomes descritivos no topo do arquivo ou em um módulo de constantes.
    *   **Remoção/Movimentação:** Se forem dados de teste ou exemplos desnecessários no código de produção, sugira a remoção ou movimentação para arquivos/scripts de teste dedicados.

4.  **Prioridade:**
    *   Comece por dados que afetam a segurança (chaves de API, credenciais).
    *   Em seguida, configurações de ambiente (URLs de API, conexões de BD).
    *   Depois, dados de exemplo que podem ser confundidos com dados reais ou dificultam o entendimento.

**Exemplo de Interação Esperada:**

*   **Agent:** "No arquivo `static/js/itinerary-kanban.js`, a função `formatDate` usa uma data base fixa: `const startDate = new Date(\'2025-05-05\');`. Isso deve ser parametrizado ou vir de uma configuração?"
*   **Usuário (ou você, Manus, se estiver guiando):** "Este é um valor de exemplo. Sugira remover ou tornar claro que é um placeholder para desenvolvimento."
*   **Agent:** "No arquivo `shared/db.js`, a string de conexão padrão `postgres://viajey:viajey@viajey_viajey:5432/viajey?sslmode=disable` contém credenciais. Sugiro movê-la completamente para Replit Secrets (variáveis de ambiente) e o código ler `process.env.DATABASE_URL`."

**Resultado Esperado:** Um código mais limpo, onde os dados fixos são minimizados, e a configuração da aplicação é mais gerenciável e segura.

Por favor, Replit Agent, inicie a análise do projeto ViajeyPlanner para identificar e refatorar dados fixos conforme estas diretrizes.
